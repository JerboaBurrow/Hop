name: Hop

on:
  push:
    branches: [ "main" ]
  pull_request:

jobs:
  linuxXlinux:
    runs-on: ubuntu-18.04

    steps:
    - uses: actions/checkout@v3
    
    - name: Install dependencies
      run: sudo apt-get install -y build-essential mesa-common-dev libx11-dev libxrandr-dev libgl1-mesa-dev libglu1-mesa-dev libfreetype6-dev libopenal-dev libsndfile1-dev libudev-dev 

    - name: linux-linux
      # Build your program with the given configuration
      run: ./dependencies.sh && ./build.sh -t && mkdir linuxbuild && cp build/Jerboa linuxbuild/ && cp -r resources linuxbuild/ && cp tile.hmap linuxbuild/

    - name: Tests
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest
    - name: buildArtifact
      uses: actions/upload-artifact@v3
      with:
        name: linuxbuild
        path: linuxbuild/
    
  linuxXwindows:
    runs-on: ubuntu-22.04

    steps:
    - uses: actions/checkout@v3
    
    - name: Install dependencies
      run: sudo apt-get install -y build-essential mesa-common-dev libx11-dev libxrandr-dev libgl1-mesa-dev libglu1-mesa-dev libfreetype6-dev libopenal-dev libsndfile1-dev libudev-dev g++-mingw-w64-x86-64-posix gcc-mingw-w64-x86-64-posix

    - name: linux-X-windows
      # Build your program with the given configuration
      run: |
        ./dependencies.sh -w && ./build.sh -w -t 
        mkdir windowbuild 
        cp build/Jerboa windowsbuild/ 
        cp -r resources windowsbuild/ 
        cp tile.hmap windowsbuild/ 
        cp -r include/lib/windows/* windowsbuild
    
    - name: buildArtifact
      uses: actions/upload-artifact@v3
      with:
        name: windowsbuild
        path: windowsbuild/
      
  linuxRun:
    needs: linuxXlinux
    runs-on: ubuntu-18.04
    
    steps:
      - name: Install dependencies
        run: sudo apt-get install -y xvfb x11-apps imagemagick

      - name: get linux build
        uses: actions/download-artifact@v3
        with:
          name: linuxbuild

      - name: launch and screenshot
        run: |
          chmod +x Jerboa
          export DISPLAY=:99
          sudo Xvfb :99 -screen 0 800x600x24 &
          sleep 5
          ./Jerboa
          
      - name: upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: screenshot
          path: screenshot.png
          
      
    

